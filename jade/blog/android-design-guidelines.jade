extends ../layout/blog/article.jade
block append meta

block content
    link(href='https://fonts.googleapis.com/css?family=Roboto+Mono:400,300', rel='stylesheet', type='text/css')
    section#main.article-page
        .featured-article#android-design-guidelines
            .h-container
                a.back-button(href='/blog')

            .article-title
                .h-container
                    h1 Android Design Guidelines
                    p.article-subtitle The ultimate guide for designing modern mobile applications running Android.
    
    div#share-div
        a(href="https://twitter.com/share" class="twitter-share-button" data-via="juliakhusainova" data-hashtags="AndroidUI" data-dnt="true") Tweet
        script.
            !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');   
   
        div#fb-root
        script.
            (function(d, s, id) {
              var js, fjs = d.getElementsByTagName(s)[0];
              if (d.getElementById(id)) return;
              js = d.createElement(s); js.id = id;
              js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.5&appId=1407234032831459";
              fjs.parentNode.insertBefore(js, fjs);
            }(document, 'script', 'facebook-jssdk'));

        div.fb-like(data-href="https://julia.im/blog/android-design-guidelines", data-layout="standard", data-action="like", data-show-faces="false", data-share="false")
        

    .h-container
        .row
            .content
                p
                    span.first A
                    | ndroid is one of the most popular platforms for designing and building applications. Tablets, phones, glasses and many other devices run Android OS. With such a great variety of screen sizes, resources and style guides designing for Android can be intimidating for a designer and a lot of resources are outdated. 

                p Material Design brings consistency to Android design language. Below guideliens are meant to help a mobile designer to get familiar with common concepts and design patterns for Android.
                
                p.footnote-small The guide isn't meant to replace the official documentation by Google but rather help understand basic principles of designing for Android platform. Published: Nov 8, 2015.


                h2 Why is this important?
                p By following established patterns of the Android platform you can make the user feel comfortable using your app and the experience feel intuitive. It's User Experience Design, in a nutshell.

                h2 Units and measurements
                .article-image
                    img(src='/images/blog/android-design-guidelines/24.png')
                p Android runs on variety of devices with different resolutions. Because of many different screen sizes and resolutions, Android based operation system support a notion of Density-independent pixel (dp). Although the concept of density independent pixel has been around for a while there's still a lot of confusion around the difference between pixels, points and densities. Before we move forward let's make sure we have the perfect understanding of these terms.
                

                h3 Resolution, screen size and DPI explained
                p 
                    span.accent Resolution 
                    | is the total number of physical pixels on a screen. Measured in 
                    span.smallnote pixels.

                p 
                    span.accent Screen size 
                    | is physical size of the screen. Measured in 
                    span.smallnote inches. 
                    | Grouped into 4 categories: small, normal, large, and extra-large.

                p
                    span.accent Screen density 
                    | is the amount of pixels on the screen within one inch. Measured in 
                    span.smallnote dpi (dots per inch) 
                    | - number of dots (units) per screen inch. Grouped into six generalized densities: low, medium, high, extra-high, extra-extra-high, and extra-extra-extra-high.
  
                .article-image
                    img(src='/images/blog/android-design-guidelines/6.png')

                p DPI is an equivalent of one physical pixel on a 160 dpi screen. The conversion of dp units to screen pixels is simple: px = dp * (dpi / 160).
                table.resolutions
                    tr.tbl-header.left
                        td.device Density bucket
                        td Scaling factor
                        td Density
                    tr.left
                        td 
                            span.type MDPI
                        td 1x
                        td 160dpi
                    tr.left
                        td 
                            span.type HDPI
                        td 1.5x
                        td 240dpi
                    tr.left
                        td 
                            span.type XHDPI
                        td 2x
                        td 360dpi
                    tr.left
                        td 
                            span.type XXHDPI
                        td 3x
                        td 480dpi
                    tr.left
                        td 
                            span.type XXXHDPI
                        td 4x
                        td 640dpi

                p The generalized sizes and densities are arranged around a baseline configuration that is a normal size and mdpi (medium) density.
                
            
                h3 What does it mean for my design?
                p As you can see it's a good practice to start designing in @1x (scale factor 1) as a base line. Having more real estate on the screen can give application certain benefits but we'll talk about this in details below.

 
                h2 Adaptive design
                .article-image
                    img(src='/images/blog/android-design-guidelines/adaptive.gif')
                p It might look complicated at first but all you really need to do is to understand the basic concepts of adaptive design for mobile devices. The concept is similar to responsive design for web - we don't design for specific screen size - rather we choose a starting layout size and define breakpoints and how our design respond to hitting those breakpoints.
                
                p The basic design process can be outlined in following steps:
                p
                    span.accent 1. Choose a starting point. 
                    | It's a good practice to research the market and understand what devices your product is used on. For example, if your primary market drivers in NYC - chances are they use the mobile phones vs. tablets which means you should be focused on mdpi-xhdpi screens first.
                p
                    span.accent 2. Design the UX for your main chosen point - screen density, orientation and device type. 
                    | Make sure the UI is clear and intuitive but it also start thinking about how it's also scalable.
                p
                    span.accent 3. Define breakpoints and layout behavior. 
                    | Based on a change in a real estate you can adapt your layout and either add more content or break it down into few screens where it makes sense.




                h3 Common screen sizes
                p Most widely used Android devices and their respective screen sizes are provided in the table below. You should always design with pixel independency in mind.

                table.resolutions
                    tr.tbl-header
                        td.device Device
                        td Density (ppi)
                        td Resolution (dp)
                        td Resolution (px)
                        td Screen size (inch)
                        td Aspect ratio
                    tr
                        td.device Samsung Nexus S
                        td 1.5x
                            span.type hdpi
                        td 480 x 800 px
                        td 480 x 800 dp
                        td 4.5 in
                        td 16:9
                    tr
                        td.device Samsung Nexus S
                        td 1.5x
                            span.type hdpi
                        td 480 x 800 px
                        td 480 x 800 dp
                        td 4.5 in
                        td 16:9
                    tr
                        td.device Samsung Nexus S
                        td 1.5x
                            span.type hdpi
                        td 480 x 800 px
                        td 480 x 800 dp
                        td 4.5 in
                        td 16:9


                //-         td.device HTC Evo
                //-         td
                //-         td 1.5x
                //-             span.type HDPI
                //-         td 480 x 800
                //-         td 
                //-         td 
                //-     tr
                //-         td.device HTC Desire
                //-         td 
                //-         td 1.5x
                //-             span.type HDPI
                //-         td 480 x 800
                //-         td 
                //-         td 
                //-     tr
                //-         td.device Galaxy SII
                //-         td 
                //-         td 1.5x
                //-             span.type HDPI
                //-         td 480 x 800
                //-         td
                //-         td 
                //-     tr
                //-         td.device Droid 3&4
                //-         td 
                //-         td 1.5x
                //-             span.type HDPI
                //-         td 540 x 960
                //-         td
                //-         td
                //-     tr
                //-         td.device Google Nexus 4 (LG)
                //-         td 
                //-         td 2x
                //-             span.type XHDPI
                //-         td 768 x 1280
                //-         td
                //-         td  
                //-     tr
                //-         td.device Galaxy SIII
                //-         td 360
                //-         td 2x
                //-             span.type XHDPI
                //-         td 720 x 1280
                //-         td
                //-         td
                //-     tr
                //-         td.device Galaxy Nexus
                //-         td 
                //-         td 2x
                //-             span.type XHDPI
                //-         td 720 x 1280
                //-         td
                //-         td  
                //-     tr
                //-         td.device Galaxy Note II
                //-         td 
                //-         td 2x
                //-             span.type XHDPI
                //-         td 720 x 1280
                //-         td
                //-         td 
                //-     tr
                //-         td.device Sony Experia
                //-         td 441
                //-         td 3x
                //-             span.type XXHDPI
                //-         td 1080 x 1920
                //-         td 4'
                //-         td 9:16
                //-     tr
                //-         td.device HTC One
                //-         td
                //-         td 3x
                //-             span.type XXHDPI
                //-         td 1080 x 1920
                //-         td
                //-         td
                //-     tr
                //-         td.device Galaxy SIV
                //-         td 414
                //-         td 3x
                //-             span.type XXHDPI
                //-         td 
                //-         td 
                //-         td

                p With such a wide variety of screen sizes and densities a good rule of thumb is to design responsively starting at most commonly used device orientation and at normal density and scale up/down appropriately.
                p When designing for landscape orientation you might want to get advantage of extra screen width that you have.



                .best-practices
                    .bp-content
                        ul
                            li
                                p
                                    span.accent Use dp when defining your application UI (instead of pixels). 
                                    | Make sure it scales properly on different screen sizes.
                            li
                                p
                                    span.accent Provide alternative bitmap resources for different densities. 
                                    | For example, you should provide higher-resolution bitmaps for high-density screens and the system will use those instead of resizing the bitmap designed for medium-density screens.


                

                h2 Standard metrics
                p See table below for standard font sizes and widths used when designing for Android. All sizes are normalized to @1x.

                table.resolutions
                    tr.tbl-header
                        td.device UI component
                        td Size (pt)
                        td Weight
                        td Spacing
                    tr

                h2 Layout Components
                p Google came up with pretty specific rules on how designer should be treating the layout space. There are a few main points you should take into consideration when designing for Android.
                .article-image
                    img(src='/images/blog/android-design-guidelines/12.png')

                h3 Status bar
                .best-practices.purpose
                    .bp-content
                        p
                            span.pur-title Purpose: 
                            | Used for displaying system notifications, time and battery info.

                p On Android devices user has access to always visible status bar on top of the screen.
                .article-image
                    img(src='/images/blog/android-design-guidelines/3.png')
                p Visually the status bar may or may not be the same color as App bar depending on design considerations. I also find it's a good practice to make it black in certain cases to blend it with the device chrome.
                p The status bar can also be translucent.
                .article-image
                    img(src='/images/blog/android-design-guidelines/15.png')

                //- h3 Toolbar
                //- .best-practices.purpose
                //-     .bp-content
                //-         p
                //-             span.pur-title Purpose: 
                //-             | Provides contextual information and gives user the ability to interact with the content - e.g. enter search query, take action, etc.


                h3 App bar
                .best-practices.purpose
                    .bp-content
                        p
                            span.pur-title Purpose: 
                            | Special kind of toolbar. Used for displaying screen title/filters, navigation and available actions.
                p App bar is used to be called Action bar in the previous versions of Android.
                
                p App bar usually contains navigation elements, titles and actions. All of these are optional and depend on particular screen purpose and content.
                .article-image
                    img(src='/images/blog/android-design-guidelines/4.png')
                p.accent The default height of App bar is 56dp in portrait and 48dp in landscape.
                p The following icons are commonly used in the App bar:
                .article-image
                        img(src='/images/blog/android-design-guidelines/42.png')
                p
                    span.accent Menu 
                    | opens up a side menu.
                p
                    span.accent Back arrow 
                    | takes user to the previous screen/acton or cancels the action being performed (exits search functionality).
                p
                    span.accent Search 
                    | launches search functionality.
                p
                    span.accent Overflow menu 
                    | opens up overflow menu sheet.
                p
                    span.accent Submit 
                    | as title suggests it submits the action - sends the message, proceeds to the next step in the flow, etc.
                p
                    span.accent Refresh 
                    | updates the current content on the screen with the latest data being displayed.
                p
                    span.accent Heart 
                    | bookmarks the current content item - photo, song, url, etc.
                p
                    span.accent Trash bin 
                    | performs the delete action.
                p ... and many others.
                
                p When more than 3 action items are needed to be available in the app bar - they are placed in Overflow menu (see below).

                .best-practices
                    .bp-content
                        ul
                            li
                                p
                                    span.accent App bar contains the most important actions in the current content 
                                    | that should be immediately available to the user. It's often most basic actions like - menu, navigation and actions important in the current context (send message).
                            li
                                p
                                    span.accent Make sure to not clutter the App bar. 
                                    | 3-4 icons is more than enough, the rest can be placed in the Overflow menu.



                .article-image
                    img(src='/images/blog/android-design-guidelines/41.png')
                p In the App bar all icons and titles should be the same color. If you're using colorful background - usually white color is used for the icons. Make sure you maintain a good contrast between icons/titles and a background.

                p App bar can also be extended when you need to provide more space for branding or header image make the App bar more prominent. In this case the App bar height is multiplied by standard height (usually 4 times). Example:
                .article-image
                    img(src='/images/blog/android-design-guidelines/44.png')
                p Example could be the photo folder screen which contains photos grouped by specific criteria (destination).
                .article-image
                    img(src='/images/blog/android-design-guidelines/48.png')



                h3 Overflow menu
                .best-practices.purpose
                    .bp-content
                        p
                            span.pur-title Purpose: 
                            | Used to navigate to additional screens or access secondary actions. Usually hides under three dots icon on the top right.
                .article-image
                        img(src='/images/blog/android-design-guidelines/11.png')




                h3 Search
                .best-practices.purpose
                    .bp-content
                        p
                            span.pur-title Purpose: 
                            | Specific action that triggers search functionality within current context.
                p There are two search patterns supported by Android UI: persistent and expandable.
                p
                    span.accent Persistent 
                    | search is used when search functionality is the main focus of the app. Example: Yelp; user has to search for places (main action) to see places, read reviews, make reservations (following actions).
                .article-image
                        img(src='/images/blog/android-design-guidelines/29.png')
                p
                    span.accent Expandable 
                    | search is used when search isn't the main focus of the app but a nice-to-have functionality that allows users to search for content.
                .article-image
                        img(src='/images/blog/android-design-guidelines/19.png')
                p The magnifying glass icon on the right title is used to implement expandable search pattern. The title transforms into search field blinking cursor and back arrow to exit search. You can optionally include "x" icon to quickly clear the input field. 


                
                h3 Tabs
                .best-practices.purpose
                    .bp-content
                        p
                            span.pur-title Purpose: 
                            | Serves for quick navigation and/or as a quick filter for displayed content. Tabs can also be used to change the way content is displayed (table vs list).
                p Tabs represent a clear navigation and provide context for a destination. Besides, the screens available from tabs are only one tap away vs. side nav that we will go over below. It's important to think through clear navigation patterns when designing your application.
                p Tabs are used as secondary level navigation as well when you're using side nav as primary navigation (see below).
                .article-image
                        img(src='/images/blog/android-design-guidelines/49.png')

                p Unlike iOS, on Android Tabs are always located on the top of the screen, often attached to the App bar. There are multiple reasons for it, one of them being Navigaion bar located on the bottom - so that two navigation elements do not conflict.
                .article-image
                        img(src='/images/blog/android-design-guidelines/35.png')
                p Tabs can also serve as quick selection filter on the current screen when user needs to switch between similar choices to see different results in the content area.
                .article-image
                        img(src='/images/blog/android-design-guidelines/33.png')
                p Tabs can optionally contain icons.



                h3 Side nav
                .best-practices.purpose
                    .bp-content
                        p
                            span.pur-title Purpose: 
                            | As title suggests used mainly for navigation the app. Can also contain info about user identity and help section.
                
                p Side nav (also known as Navigation Drawer) is a panel that is available by clicking on "hamburger" icon and slides from the left to reveal app navigation.
                .article-image
                        img(src='/images/blog/android-design-guidelines/47.png')
                
                p Side nav can contain sections for logical distintion between sections within your application.
                
                .best-practices
                    .bp-content
                        ul
                            li
                                p
                                    span.accent Side nav is sophisticated way of presenting navigation. 
                                    | However do not overdo it. If you only have a few items to put in the navigation - more persistent pattern might be better. Remember - you job is to minimize the user efforts and eliminate amount of clicks if possible.

                


                h3 Bottom bar
                .best-practices.purpose
                    .bp-content
                        p
                            span.pur-title Purpose: 
                            | Specific type of toolbar that can be utilized for contextual actions, forward actions (Next), etc. Optional.

                p Bottom bar used to be extremely popular in Android design. 
                    a(href='https://dribbble.com/shots/871796-Telly-Android-Holo-Assets/attachments/93516') Here 
                    | is an example of how Jeremy Sallee, visual designer at Telly, utilized bottom bar for primary actions.

                p Another great use of bottom bar is editing menu.

                p However the bottom bar should be used carefully since its location is very close the navigation bar (see below). Consider user's reaction on accidentally navigation back simply because the actions located to close to Navigation bar.
                



                h3 Navigation bar
                .best-practices.purpose
                    .bp-content
                        p
                            span.pur-title Purpose: 
                            | A persistent pattern for Android devices regardless of brand. It contains Back, Overview and Recent actions.
                p You should account for this element in your app design.
                .article-image
                    img(src='/images/blog/android-design-guidelines/8.png', width='600px')
                p Navigation bar can also be translusent or transparent:
                .article-image
                    img(src='/images/blog/android-design-guidelines/82.png', width='600px')

                p The most important takeaway from having the persistent navigation bar is that you should avoid including bottom tab bars as navigation pattern in your application layout. Instead, it is sugested to use top bar or left menu as a way of navigation the app.


                h3 Content area
                .best-practices.purpose
                    .bp-content
                        p
                            span.pur-title Purpose: 
                            | Displaying the contextual data as intended by your application.
                
                p The content area is everything below the App bar and above the bottom bar. The content layout can be in a form of cards, timelines, lists, forms and many others. We'll go over different types of content areas in more details in the following posts.

                .article-image
                    img(src='/images/blog/android-design-guidelines/14.png')


                h2 Colors
                p Material Design guidelines from Google suggest using rich and bold colors when designing for Android. The usage of color should be determined by the branding guidelines and overall color atmoshere of the product you're designing for.
                .article-image
                    img(src='/images/blog/android-design-guidelines/colors.png')

                h3 Color palette 
                p You can refer to Google color palette when choosing colors for your application UI. Google suggests chosing 3 hues from primary palette as main colors and one from secondary palette (starting with A) as an accent color.

                p You can download official Google Material Design color swatches 
                    a(href='http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0B08MbvYZK1iNT0dFWFBjdTNKaXM/color_swatches.zip') here.


                h3 Do I have to follow Material design color scheme?
                p It depends on the project. If you have an establish branding guidelines and color scheme to start off - you should utilize them in the application UI for creating visual consistency with other applications or products under the same brand.
                p However if you're starting from scratch having creative freedom - go ahead and create the color scheme using Material colors. They were carefully selected and tested by Google Design team. Using Material design suggested patterns will show that you as respect platform agnostic solutions and strive to minimize the learning curve for your users.
                p In any case - whether you follow establish color palletes or not - it is a good rule of thumb to check the color pairing suggestions.

                h3 Color guide
                p I always include color palette as a part of project style guide with reference for RBG and HEX colors as well as usage guidelines.
                .article-image
                    img(src='/images/blog/android-design-guidelines/Poosh_StyleGuide.png')
                
                
                

                h2 Typography

                h3 Roboto
                p Standard font used on Android devices is Roboto. You can download it here and use in your application design, it's an open type designed for high density screens.
                p Finally, typography uses a slightly finer baseline grid of 4dp, so line heights should be 20dp, 24dp, 32dp, 36dp, etc.
                .article-image
                    img(src='/images/blog/android-design-guidelines/roboto.png')

                h3 Roboto Mono
                .article-image
                    img(src='/images/blog/android-design-guidelines/45.png')


                h3 Noto
                p Noto has been the standard typeface on Android for all languages that are not covered by Roboto.

                .article-image
                    img(src='/images/blog/android-design-guidelines/noto.png')

                h3 Custom fonts
                p You can include custom fonts into your Android application design to match the branding guidelines. The usage of custom font has to be justified by the need of the app and proven to be the better way of solving design problems that can't be solved with standard fonts offered by Android platform.

                .best-practices
                    .bp-content
                        ul
                            li
                                p
                                    span.accent Use Roboto for Latin, Greek, and Cyrillic scripts. 
                                    | And Noto for all other languages.
                            li
                                p
                                    span.accent Don't use too many text styles and sizes in your app design. 
                                    | It creates inconsistency and confuses the user.




                h2 Iconography

                p The sharp and recognizable icons are essential part of application UI. Make sure you icons communicating clear intention and get out of the way. It's a good idea to use Android system icons for common actions.
                .article-image
                    img(src='/images/blog/android-design-guidelines/9.png')
                
                p To make sure you accomodate for different screen sizes and resolutions, follow 2:3:4:6:8 scaling ratio when exporting your icon assets. For low-density screens Android will scale down the assets from HDPI size which is 1/2 of HDPI.
                .article-image
                    img(src='/images/blog/android-design-guidelines/28.png')


                h3 Launcher
                p It's the icon on the Home screen, tapping it will launch your application. It has to be sharp and have the level of details enough to recognize the application.

                .best-practices
                    .bp-content
                        ul
                            li
                                p
                                    span.accent Start designing your icon from mdpi size to make sure it works for smaller screens. 
                                    | Then scale it up to accomodate hdpi, xhdpi, xxhdpi, xxxhdpi.
                            li
                                p
                                    span.accent When designing icons use simple lines and recognizable pattertns. 
                                    | See if your icons are recognizable without titles or any other text next to it.





                h2 Launch screen
                .article-image
                    img(src='/images/blog/android-design-guidelines/50.png')


                h2 Animation
                p Animation is a great subject that goes beyond the scope of this article. We'll cover animation in more details in upcoming Designing Android Animation post.


                h2 Testing
                p There are a few ways to test your design on Android device. Depending on what software did you use to create the design and what exactly you're testing you can go with:
                div
                    .col-3
                        img(src='/images/blog/android-design-guidelines/testing-skala.png')
                        p 
                            a(href='https://bjango.com/help/skalaviewandroid/overview/', target='_blank') Skala View 
                            | lets you preview design directly from Photoshop. You need to establish connection between PS and Android device over the same wi-fi.
                    
                    .col-3
                        img(src='/images/blog/android-design-guidelines/testing-invision.png')
                        p You can setup a simple flow in 
                            a(href='https://bjango.com/help/skalaviewandroid/overview/', target='_blank') Invision
                            |. Useful for user testing on earlier stages of the project.
                    
                    .col-3
                        img(src='/images/blog/android-design-guidelines/testing-pixate.png')
                        p In case you have built an interactive prototype - you can view in on actual device by installing 
                            a(href='https://bjango.com/help/skalaviewandroid/overview/', target='_blank') Pixate 
                            | on your Android device.

                    
                h2 Resources
                p Refer to the resources below for more in-depth explanation of principles of Android design. Also feel free to hit me up on Twitter at @juliakhusainova if you have any questions.
                .best-practices
                    //- img.bp-icon(src='/images/blog/callout-android.svg')
                    .bp-content
                        ul
                            li 
                                p
                                    a(href='http://www.google.com/design/spec/material-design/introduction.html', target='_blank') Material Design Guidelines 
                                    | - a comprehensive explanation of Material Design by Google. New articles are added constantly.
                            li
                                p
                                    a(href='http://developer.android.com/guide/practices/screens_support.html', target='_blank') Supporting Multiple screens 
                                    | - developer's guide to DPI explaining how it works from technical perspective. Very useful.

                            li
                                p
                                    a(href='https://materialdesignicons.com/') https://materialdesignicons.com/
                                    | Material design icons
                h2 Comments
                include ../layout/comments.jade
